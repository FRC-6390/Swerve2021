import { LitElement } from 'lit-element';
/**
 * @prop {String} label - If set, defines the text label shown on top.
 * @prop {String} value - If set, defines the value of the input. Changes upon user interaction.
 * @prop {Number} rows - Defines the visible number of lines in a text area.
 * @prop {Number} maxLength - Defines the maximum number of characters allowed in the text area.
 * @prop {Boolean} active - If set to true, highlights the label and underline.
 * @prop {Boolean} disabled - If set to true, disables mouse clicks and the style gets updated.
 * @prop {Boolean} readonly - If set to true, disables the input without reducing the opacity.
 * @prop {Boolean} autofocus - If set to true, the component gets focused as soon as the page loads.
 */
export declare class korTextarea extends LitElement {
    label: any;
    value: any;
    rows: number;
    maxLength: number;
    active: any;
    disabled: any;
    readonly: any;
    autofocus: any;
    static get styles(): import("lit-element").CSSResult[];
    render(): import("lit-element").TemplateResult;
    constructor();
    handleClear(): void;
    attributeChangedCallback(name: any, oldval: any, newval: any): void;
}
