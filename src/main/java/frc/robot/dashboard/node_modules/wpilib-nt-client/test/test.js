"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("../");
const ntClient = new __1.Client();
const ntClient2 = new __1.Client();
let args = process.argv.slice(2);
ntClient.startDebug("Debug1", 2 /* messages */);
ntClient2.startDebug("Debug2", 1 /* messageType */);
ntClient.start((con, err, is2) => {
    console.log({ con, err, is2 });
    if (err != null)
        throw err;
    if (!con)
        return;
    ntClient.Assign("3", "/SmartDashboard/test");
    ntClient.Assign("4", "/SmartDashboard/test");
    ntClient.Assign("5", "/SmartDashboard/test");
    ntClient.Assign("6", "/SmartDashboard/test");
    setTimeout(() => {
        let id = ntClient.getKeyID("/SmartDashboard/test"), entry = ntClient.getEntry(id), ids = ntClient.getKeyID();
        console.log({ id, entry, ids });
        if (entry == null)
            throw new Error("Non Existant Entry");
        ntClient2.start((con, err) => {
            console.log({ con, err, type: "2nd" });
            if (!con)
                return;
            setTimeout(() => {
                console.log("CLOSING");
                ntClient.stop();
                ntClient2.destroy();
            }, 2000);
        }, args[0], parseInt(args[1]) || undefined);
    }, 1000);
}, args[0], parseInt(args[1]) || undefined);
ntClient.addListener((key, val, valType, type, id, flags) => {
    console.log({ key, val, valType, type, id, flags });
});
ntClient2.addListener((key, val, valType, type, id, flags) => {
    if (key === "/SmartDashboard/test") {
        console.log({ t: "2", key, val, valType, type, id, flags });
    }
});
ntClient.setReconnectDelay(1000);
